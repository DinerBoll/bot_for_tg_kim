import os
import pandas as pd
from simplekml import Kml
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters

# --- –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç ---
def clean_coord(coord_str):
    return (
        str(coord_str)
        .replace('\n', '')
        .replace('\r', '')
        .replace('"', '')
        .replace("'", '')
        .replace(' ', '')
        .strip()
    )

# --- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è KML-—Ñ–∞–π–ª–∞ –∏–∑ Excel ---
def create_kml_from_excel(file_path):
    df = pd.read_excel(file_path, skiprows=3)

    kml = Kml()

    for index, row in df.iterrows():
        try:
            start_str = clean_coord(row["–ù–∞—á–∞–ª–æ"])
            end_str = clean_coord(row["–ö–æ–Ω–µ—Ü"])
            title = str(row["ID ODH"]).strip()[:-2]
            length = str(row["L –æ–±—â–∞—è"]).strip()
            name = str(row["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"]).strip()

            lat1, lon1 = map(float, start_str.split(","))
            lat2, lon2 = map(float, end_str.split(","))

            kml.newpoint(
                name=f"{title}, {length}",
                coords=[(lon1, lat1)],
                description=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}"
            )
            kml.newpoint(
                name=f"{title}, {length}",
                coords=[(lon2, lat2)],
                description=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}"
            )
            kml.newlinestring(
                name=title,
                coords=[(lon1, lat1), (lon2, lat2)]
            )
        except Exception as e:
            print(f"[‚ùå] –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {index}: {e}")
            continue

    output_path = file_path.replace(".xlsx", ".kml")
    kml.save(output_path)
    return output_path

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Excel-—Ñ–∞–π–ª–∞ ---
async def handle_excel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    document = update.message.document
    file_path = f"./{document.file_name}"

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    new_file = await context.bot.get_file(document.file_id)
    await new_file.download_to_drive(file_path)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è KML
    kml_path = create_kml_from_excel(file_path)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º KML-—Ñ–∞–π–ª
    await update.message.reply_document(document=open(kml_path, "rb"))

    # –ö–Ω–æ–ø–∫–∞-—Å—Å—ã–ª–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    await update.message.reply_text(
        "‚úÖ KML-—Ñ–∞–π–ª –≥–æ—Ç–æ–≤. –ó–∞–≥—Ä—É–∑–∏ –µ–≥–æ —Å—é–¥–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç—É –≤ 1 –∫–ª–∏–∫:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üó∫ –û—Ç–∫—Ä—ã—Ç—å –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç", url="https://yandex.ru/maps/tools/constructor/")]
        ])
    )

    os.remove(file_path)
    os.remove(kml_path)

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == "__main__":
    import asyncio

    TOKEN = "YOUR_BOT_TOKEN_HERE"  # <-- –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.Document.ALL, handle_excel))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    asyncio.run(app.run_polling())
